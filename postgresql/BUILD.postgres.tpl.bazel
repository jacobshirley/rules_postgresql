#Generated by postgresql/repositories.bzl
load("@rules_postgresql//postgresql:toolchain.bzl", "postgresql_toolchain")
load("@rules_foreign_cc//foreign_cc:defs.bzl", "configure_make", "runnable_binary")

filegroup(
    name = "srcs",
    srcs = glob(
        ["postgres-REL_{version}/**"],
        exclude = ["*.bazel"]
    ),
    visibility = ["//visibility:public"],
)

BINS = [
    "clusterdb",
    "createdb",
    "createuser",
    "dropdb",
    "dropuser",
    "ecpg",
    "initdb",
    "pg_amcheck",
    "pg_archivecleanup",
    "pg_basebackup",
    "pg_checksums",
    "pg_config",
    "pg_controldata",
    "pg_ctl",
    "pg_dump",
    "pg_dumpall",
    "pg_isready",
    "pg_receivewal",
    "pg_recvlogical",
    "pg_resetwal",
    "pg_restore",
    "pg_rewind",
    "pg_test_fsync",
    "pg_test_timing",
    "pg_upgrade",
    "pg_verifybackup",
    "pg_waldump",
    "pgbench",
    "postgres",
    "postmaster",
    "psql",
    "reindexdb",
    "vacuumdb"
]

configure_make(
    name = "postgres_build",
    configure_in_place = True,
    alwayslink = True,
    lib_source = ":srcs",
    targets = [
        "install"
    ],
    env = select({
        "@platforms//os:macos": {
            "AR": "",
            "BUILD_WITH_INSTALL_RPATH": "1",
            "BUILD_WITH_INSTALL_NAME_DIR": "@rpath/",
            "INSTALL_NAME_DIR": "@rpath",
            "RPATH": "@executable_path/../lib",
            "INSTALL_RPATH": "@executable_path/../lib",
            "LDFLAGS_SL": "-Wl,-rpath,@executable_path/../lib",
        },
    }),
    configure_options = [
         "--with-zlib"
    ],
    args = [],
    out_data_dirs = [
        "share",
        "lib" #Add lib here to save having to explicitly add them all to the out_shared_libs parameter
    ],
    out_lib_dir = "lib",
    out_binaries = select({
        "@platforms//os:windows": [bin + ".exe" for bin in BINS],
        "//conditions:default": BINS,
    }),
    postfix_script = select({
        # Need to fix the install_name as on Mac OSX it is hard coded to the build directory
        "@platforms//os:macos": """

LIBS=$(ls $INSTALLDIR/lib)
BINS=$(ls $INSTALLDIR/bin)

for lib in $LIBS; do
    if [[ $lib == *.dylib ]]; then
        install_name_tool -id @rpath/$lib $INSTALLDIR/lib/$lib
    fi
done

for bin in $BINS; do
    for lib in $LIBS; do
        install_name_tool -change $BUILD_TMPDIR/$INSTALL_PREFIX/lib/$lib @rpath/$lib $INSTALLDIR/bin/$bin
    done

    install_name_tool -add_rpath @loader_path/../lib $INSTALLDIR/bin/$bin
done
    """,
    }),
    visibility = ["//visibility:public"],
)

postgresql_toolchain(
    name = "postgresql_toolchain", 
    binary = "bin/pg_ctl",
    target_tool = ":postgres_build",
)